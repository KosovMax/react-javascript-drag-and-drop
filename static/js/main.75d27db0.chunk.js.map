{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ListBox","props","index","component","components","drop","allowDrop","removeComponent","addRow","removeRow","moveDrag","moveDragEnd","type","name","id","groupId","leftOrRight","className","data-type","data-id","onClick","onDrop","onDragOver","data-group-id","filter","map","k","draggable","onDragStart","onDragEnd","findIndex","nextComponent","nextType","nextId","nextName","data-update-id","App","useState","setComponents","updateDrop","setUpdateDrop","updateId","setUpdateId","lastIndex","copyComponent","setCopyComponent","useEffect","console","log","isAddReplace","update","$splice","prevState","arrayComponents","$set","buliderType","find","useCallback","ev","preventDefault","target","getAttribute","Number","isGroupId","closest","arrayComponents2","indexComponents","newMoveComponent","HalfRow","getComponent","style","backgroundColor","color","classList","contains","drag","dataTransfer","setData","opacity","getData","nowIndex","$","css","newComponent","uuid","getId","componentIndex","prevId","arrayComponent","arrayComponent2","onDragLeave","isBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAQMA,EAAU,SAAVA,EAAWC,GAAU,IAEvBC,EAUED,EAVFC,MACAC,EASEF,EATFE,UACAC,EAQEH,EARFG,WACAC,EAOEJ,EAPFI,KACAC,EAMEL,EANFK,UACAC,EAKEN,EALFM,gBACAC,EAIEP,EAJFO,OACAC,EAGER,EAHFQ,UACAC,EAEET,EAFFS,SACAC,EACEV,EADFU,YAEKC,EAAwCT,EAAxCS,KAAMC,EAAkCV,EAAlCU,KAAMC,EAA4BX,EAA5BW,GAAIC,EAAwBZ,EAAxBY,QAASC,EAAeb,EAAfa,YAE9B,IAAa,IAAVJ,EACC,OAAO,qBAAKK,UAAU,eAG1B,GAAY,KAATL,EACD,OACM,sBAAKK,UAAU,iBAAiBC,YAAWN,EAAMV,MAAOA,EAAOiB,UAASL,EAAxE,UACE,gCAAMD,EAAN,IAAY,sBAAMI,UAAU,SAASG,QAAS,kBAAIb,EAAgB,CAACO,QAAvD,eAAZ,OACA,qBAAKG,UAAU,YAAYI,OAAQhB,EAAMiB,WAAYhB,EAAWiB,gBAAeT,EAA/E,SAEIV,EAAWoB,QAAO,qBAAET,UAAsCD,KAAIW,KAAI,SAACtB,EAAWuB,GAAZ,OAAkB,cAAC1B,EAAD,CAEEE,MAAOwB,EACPvB,UAAWA,EACXC,WAAYA,EACZC,KAAMA,EACNC,UAAWA,EACXC,gBAAiBA,EACjBC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,GAVRe,WAkBzG,GAAY,KAATd,IAAgC,IAAjBI,EAChB,OACE,qBAAKC,UAAU,iBAAiBC,YAAWN,EAAMV,MAAOA,EAAQiB,UAASL,EAAIa,UAAU,OAAOC,YAAalB,EAAUmB,UAAWlB,EAAhI,SACE,gCAAME,EACJ,gCACE,sBAAMI,UAAU,SAASG,QAAS,kBAAIb,EAAgB,CAACO,QAAvD,eACA,sBAAMM,QAAS,kBAAIZ,EAAOM,EAAIC,IAA9B,uBAMV,GAAY,KAATH,GAA+B,IAAhBI,EAChB,OAAO,6BAET,GAAY,KAATJ,GAA+B,IAAhBI,EAAkB,CAClC,IAAMd,EAAQE,EAAW0B,WAAU,qBAAEhB,KAAwBA,KACvDiB,EAAgB3B,EAAWF,EAAM,GAE3B8B,EAAsCD,EAA3CnB,KAAkBqB,EAAyBF,EAA5BjB,GAAgBoB,EAAYH,EAAjBlB,KAIjC,OACE,sBAAKI,UAAU,sBAAsBC,aAAY,EAAGhB,MAAOA,EAAQiB,WAAU,EAA7E,UACA,qBAAKF,UAAU,cAAf,SACE,gCAAMJ,EACJ,8BACE,sBAAMI,UAAU,SAASG,QAAS,kBAAIb,EAAgB,CAACO,KAAImB,YAA3D,sBAKQ,KAAbD,GAEC,sBAAKf,UAAU,eAAeI,OAAQhB,EAAMiB,WAAYhB,EAAW6B,iBAAgBF,EAAnF,mBACQ,sBAAMhB,UAAU,YAAYG,QAAS,kBAAIX,EAAUwB,EAAQnB,IAA3D,kBAII,KAAbkB,GAED,qBAAKf,UAAU,cAAf,SACA,gCAAMiB,EACJ,8BACE,sBAAMjB,UAAU,SAASG,QAAS,kBAAIX,EAAUwB,EAAQnB,IAAxD,2BAuVGsB,EA1UH,WAAO,IAAD,EAEoBC,mBAAS,IAF7B,mBAETjC,EAFS,KAEGkC,EAFH,OAIoBD,mBAAS,IAJ7B,mBAITE,EAJS,KAIGC,EAJH,OAKgBH,mBAAS,IALzB,mBAKTI,EALS,KAKCC,EALD,OAOkBL,oBAAU,GAP5B,mBAOTM,EAPS,aAQ0BN,mBAAS,KARnC,mBAQTO,EARS,KAQMC,EARN,KAUhBC,qBAAU,WACR,OAAO,WACLN,EAAc,IACdE,EAAY,OAEb,IAEHI,qBAAU,WACRC,QAAQC,IAAI5C,KACX,CAACA,IAEJ0C,qBAAU,WACR,GAAG,OAACP,QAAD,IAACA,OAAD,EAACA,EAAYzB,GAAhB,CAEAiC,QAAQC,IAAIT,GACZ,IAAMU,EAAe7C,EAAW0B,WAAU,mBAAsB,IAAtB,EAAElB,QAG1C0B,GADmB,IAAlBW,EACaC,IAAO9C,EAAY,CAC/B+C,QAAQ,CACN,CAACF,EAAc,GACf,CAACA,EAAc,EAAGV,MAIL,SAAAa,GAAS,4BAASA,GAAT,CAAoBb,SAE/C,CAACA,IAEJO,qBAAU,WACR,GAAG,OAACL,QAAD,IAACA,OAAD,EAACA,EAAU3B,GAAd,CAEAiC,QAAQC,IAAIP,GAHA,IAIL3B,EAAY2B,EAAZ3B,GAAIF,EAAQ6B,EAAR7B,KACLV,EAAQE,EAAW0B,WAAU,qBAAEhB,KAAwBA,KACvDuC,EAAkBH,IAAO9C,EAAD,eAAeF,EAAO,CAACU,KAAK,CAAC0C,KAAK1C,GAAOC,KAAK,CAACyC,KAAKC,EAAYC,MAAK,qBAAE1C,KAAeF,KAAMC,SAG1HyB,EAAc,YAAIe,OACjB,CAACZ,IAEJ,IAAMnC,EAAYmD,uBAAY,SAACC,GAC7BA,EAAGC,iBAEH,IAAM/C,EAAO8C,EAAGE,OAAOC,aAAa,aAC9B3D,EAAQ4D,OAAOJ,EAAGE,OAAOC,aAAa,UACtC/C,EAAK4C,EAAGE,OAAOC,aAAa,WAO9B9C,EAAU,KACRgD,EAAYL,EAAGE,OAAOI,QAAQ,sBAAsBH,aAAa,iBAMvE,GAJGE,IAAWhD,EAASgD,GAIpBnD,EAAK,CAENmC,QAAQC,IAAI,CAACpC,KAAKkD,OAAOlD,GAAOV,QAAOyC,YAAW7B,OAElD,IAAMmD,EAAmB7D,EAAWoB,QAAO,mBAAkB,IAAlB,EAAEV,MACvCoD,EAAkB9D,EAAW0B,WAAU,qBAAEhB,KAAwBA,KAEjEqD,EAAmB,CACvBrD,IAAI,EACJF,MAAM,EACNG,UACAF,KAAK,YACLuD,QAAQ,EACRpD,aAAa,GAGTqD,EAAejE,EAAW8D,GAChCnB,QAAQC,IAAIqB,GACZ,IAAMhB,EAAkBH,IAAOe,EAAkB,CAC/Cd,QAAQ,CAEN,CAACe,EAAiB,EAAGC,MAMzB7B,EAAc,YAAIe,IAOpBK,EAAGE,OAAOU,MAAMC,gBAAkB,GAElC,IAAIC,EAAQ,YAGMd,EAAGE,OAAOa,UAAUC,SAAS,aAE7ChB,EAAGE,OAAOU,MAAMC,gBAAkBC,GAGhBd,EAAGE,OAAOa,UAAUC,SAAS,eAE/ChB,EAAGE,OAAOU,MAAMC,gBAAkBC,GAGbd,EAAGE,OAAOa,UAAUC,SAAS,kBAElDhB,EAAGE,OAAOU,MAAMC,gBAAkBC,KAGnC,CAACpE,EAAYwC,IAgCV+B,EAAO,SAACjB,GAEZA,EAAGkB,aAAaC,QAAQ,OAAQf,OAAOJ,EAAGE,OAAOC,aAAa,cAE1DnD,EAAW+C,uBAAY,SAACC,GAC5B,IAAM5C,EAAK4C,EAAGE,OAAOC,aAAa,WAElCd,QAAQC,IAAI,YACZU,EAAGE,OAAOU,MAAMQ,QAAU,GAE1BjC,EAAiBzC,EAAWoD,MAAK,qBAAE1C,KAAwBA,QAG1D,CAACV,IAGEO,EAAc,SAAC+C,GACnBA,EAAGE,OAAOU,MAAMQ,QAAU,GAItBzE,EAAOoD,uBAAY,SAACC,GACxBA,EAAGC,iBACHD,EAAGE,OAAOU,MAAMC,gBAAkB,GAElC,IAAIzD,EAAKgD,OAAQJ,EAAGkB,aAAaG,QAAQ,SACrChE,EAAU2C,EAAGE,OAAOC,aAAa,iBACjCpB,EAAWiB,EAAGE,OAAOC,aAAa,kBAQtC,UAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAAe9B,GAAlB,CACQA,EAAO8B,EAAP9B,GACNiC,QAAQC,IAAI,CAACJ,kBACb,IAAMD,EAAYvC,EAAW0B,WAAU,qBAAEhB,KAAwBA,KAC3DkE,EAAW5E,EAAW0B,WAAU,mBAAkB,IAAlB,EAAEhB,MAaxC,GAVAmE,IAAE,gBAAgBC,IAAI,CAACJ,QAAQ,IAQ/B/B,QAAQC,IAAI,CAACgC,cAEI,IAAdA,EAAgB,CAEjB,IAAM3B,EAAkBjD,EAAWoB,QAAO,qBAAEV,KAAwB8B,EAAc9B,MAClFwB,EAAc,GAAD,mBAAKe,GAAL,CAAsBT,SAEhC,CAEH,IAAMS,EAAkBH,IAAO9C,EAAY,CACzC+C,QAAQ,CACN,CAACR,EAAW,GACZ,CAACqC,EAAU,EAAGpC,MAIlBN,EAAc,YAAIe,EAAgB7B,QAAO,mBAAkB,IAAlB,EAAEV,QAG7C+B,EAAiB,QAlCnB,CAsCA,GAAG9B,EAAQ,CACT,IAAMoE,EAAe,CACnBrE,GAAGsE,cACHxE,KAAKE,EACLC,UACAF,KAAK0C,EAAYC,MAAK,qBAAE1C,KAAwBA,KAAID,KACpDuD,QAAQ,EACRpD,aAAa,GAEfwB,EAAc2C,GAGb1C,GACDC,EAAY,CAAC5B,GAAG2B,EAAU7B,KAAKE,OAKhC,CAACyB,EAAYE,EAAUG,EAAexC,IAQnCG,EAAkB,SAAC,GAAqB,IAApBO,EAAmB,EAAnBA,GAAmB,IAAfmB,cAAe,MAAN,EAAM,EAErCgC,EADkB7D,EAAWoB,QAAO,qBAAET,UAAyBD,KAC5BU,QAAO,gBAAK6D,EAAL,EAAEvE,GAAF,OAAgBuE,IAAUvE,GAAMuE,IAAUpD,KAE1FK,EAAc,YAAK2B,KAIfzD,EAAS,SAACM,EAAIC,GAChB,IAAMuE,EAAiBlF,EAAW0B,WAAU,qBAAEhB,KAAwBA,KAEhEqE,EAAe,CACnBrE,GAAGsE,cACHxE,KAAK,GACLG,UACAF,KAAK,WACLuD,QAAQ,EACRpD,YAAY,GAGRqC,EAAkBH,IAAO9C,EAAD,eAAekF,EAAgB,CAAClB,QAAQ,CAACd,KAAK,GAAItC,YAAY,CAACsC,KAAK,MAC5FW,EAAmBf,IAAOG,EAAiB,CAC/CF,QAAQ,CACN,CAACmC,EAAe,EAAG,EAAGH,MAI1B7C,EAAc,YAAI2B,KAGhBxD,EAAY,SAACK,EAAIyE,GACrB,IAAMC,EAAiBpF,EAAWoB,QAAO,qBAAEV,KAAwBA,KAC7DZ,EAAQsF,EAAe1D,WAAU,qBAAEhB,KAAcyE,KAEjDE,EAAkBvC,IAAOsC,EAAD,eAAmBtF,EAAO,CAACkE,QAAQ,CAACd,KAAK,GAAItC,YAAY,CAACsC,MAAM,MAG9FhB,EAAc,YAAImD,KAGpB,OAAQ,qCACR,yEAEF,sBAAKxE,UAAU,OAAf,UACI,8BAGIsC,EAAY9B,KAAI,WAAaC,GAAb,IAAEZ,EAAF,EAAEA,GAAID,EAAN,EAAMA,KAAN,OACd,qBAAaI,UAAU,MAAMU,UAAU,OAAOC,YAAa+C,EAAM7D,GAAE,eAAUA,GAAMK,UAASL,EAA5F,SAAkGD,GAAxFa,QAMhB,qBAAKT,UAAU,UAAUI,OAAQhB,EAAMiB,WAAYhB,EAAWoF,YArL9C,SAAChC,GACjBA,EAAGC,iBAQL,IAAMgC,EAAQjC,EAAGE,OAAOa,UAAUC,SAAS,cACvCiB,GACFrD,EAAclC,EAAWoB,QAAO,mBAAsB,IAAtB,EAAEZ,SAIpCmC,QAAQC,IAAI2C,GASVjC,EAAGE,OAAOU,MAAMC,gBAAkB,IA6JoDhD,gBAAe,EAArG,SAEInB,EAAWoB,QAAO,kBAA0B,MAA1B,EAAET,WAA6BU,KAAI,SAACtB,EAAWuB,GAAZ,OAAkB,cAAC,EAAD,CAEKxB,MAAOwB,EACPvB,UAAWA,EACXC,WAAYA,EACZC,KAAMA,EACNC,UAAWA,EACXC,gBAAiBA,EACjBC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVC,YAAaA,GAVRe,eC1Z1EkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.75d27db0.chunk.js","sourcesContent":["\nimport './App.css';\nimport buliderType from './builderType.json'\nimport { useCallback, useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport update from 'immutability-helper';\nimport $ from \"jquery\";\n\nconst ListBox = (props) =>{\n  const { \n    index,\n    component, \n    components,\n    drop, \n    allowDrop ,\n    removeComponent,\n    addRow,\n    removeRow, \n    moveDrag,\n    moveDragEnd\n  } = props;\n  const {type, name, id, groupId, leftOrRight} = component\n\n    if(type === -5){\n        return(<div className=\"replaceAdd\"></div>)\n    }\n\n    if(type === 11){\n      return( \n            <div className=\"ListBoxCard lc\" data-type={type} index={index} data-id={id} >\n              <div>{name} <span className=\"remove\" onClick={()=>removeComponent({id})} >x</span> </div>\n              <div className=\"groupDrop\" onDrop={drop} onDragOver={allowDrop} data-group-id={id}>\n                {\n                  components.filter(({groupId:getGroupId})=> getGroupId === id).map((component, k) =>(<ListBox \n                                                                                                        key={k} \n                                                                                                        index={k} \n                                                                                                        component={component} \n                                                                                                        components={components} \n                                                                                                        drop={drop} \n                                                                                                        allowDrop={allowDrop} \n                                                                                                        removeComponent={removeComponent} \n                                                                                                        addRow={addRow} \n                                                                                                        removeRow={removeRow}\n                                                                                                        moveDrag={moveDrag}\n                                                                                                        moveDragEnd={moveDragEnd}\n                                                                                                         />) )\n                }\n              </div> \n            </div>\n          )\n    }\n\n    if(type !== 11 && leftOrRight === -1){\n      return(\n        <div className=\"ListBoxCard lc\" data-type={type} index={index}  data-id={id} draggable=\"true\" onDragStart={moveDrag} onDragEnd={moveDragEnd}>\n          <div>{name}  \n            <div>\n              <span className=\"remove\" onClick={()=>removeComponent({id})}>x</span>  \n              <span onClick={()=>addRow(id, groupId)}>+</span>\n            </div>\n          </div> \n        </div>\n      )\n    }\n    if(type !== 11 && leftOrRight === 1){\n      return(<></>)\n    }\n    if(type !== 11 && leftOrRight === 0){\n      const index = components.findIndex(({id:getId}) => getId === id)\n      const nextComponent = components[index+1]\n\n      const {type:nextType, id:nextId, name:nextName} = nextComponent;\n\n\n\n      return(\n        <div className='ListBoxCard_flex lc' data-type={-2} index={index}  data-id={-2}>\n        <div className=\"ListBoxCard\">\n          <div>{name}  \n            <div>\n              <span className=\"remove\" onClick={()=>removeComponent({id, nextId})}>x</span>  \n            </div>\n          </div> \n        </div>\n\n        {nextType === 14 &&\n\n          <div className=\"addComponent\" onDrop={drop} onDragOver={allowDrop} data-update-id={nextId}>\n            SPACE <span className=\"removeRow\" onClick={()=>removeRow(nextId, id)} >-</span>\n          </div>\n\n        }\n        {nextType !== 14 &&\n\n        <div className=\"ListBoxCard\">\n        <div>{nextName}  \n          <div>\n            <span className=\"remove\" onClick={()=>removeRow(nextId, id)}>x</span>  \n          </div>\n        </div> \n        </div>\n\n        }\n        </div>\n      )\n    }\n\n \n}\n\nconst App = () => {\n\n  const [components, setComponents] = useState([])\n\n  const [updateDrop, setUpdateDrop] = useState({});\n  const [updateId, setUpdateId] = useState({});\n\n  const [lastIndex, setLastIndex] = useState(-1)\n  const [copyComponent, setCopyComponent] = useState({})\n\n  useEffect(()=>{\n    return () =>{\n      setUpdateDrop({})\n      setUpdateId({})\n    }\n  }, [])\n\n  useEffect(()=>{\n    console.log(components);\n  }, [components])\n\n  useEffect(()=>{\n    if(!updateDrop?.id) return;\n\n    console.log(updateDrop);\n    const isAddReplace = components.findIndex(({type}) => type === -5)\n\n    if(isAddReplace !== -1){\n      setComponents(update(components, {\n        $splice:[\n          [isAddReplace, 1],\n          [isAddReplace, 0, updateDrop]\n        ]\n      }))\n    }\n    else setComponents(prevState => ([...prevState, updateDrop]))\n\n  }, [updateDrop])\n\n  useEffect(()=>{\n    if(!updateId?.id) return\n\n    console.log(updateId);\n    const {id, type} = updateId;\n    const index = components.findIndex(({id:getId}) => getId === id)\n    const arrayComponents = update(components, {[index]:{type:{$set:type}, name:{$set:buliderType.find(({id}) => id === type).name}}})\n  \n    // console.log(arrayComponents);\n    setComponents([...arrayComponents])\n  }, [updateId])\n\n  const allowDrop = useCallback((ev)=>{\n    ev.preventDefault();\n\n    const type = ev.target.getAttribute('data-type')\n    const index = Number(ev.target.getAttribute('index'))\n    const id = ev.target.getAttribute('data-id')\n\n    // if(copyComponent?.id){\n    //   document.querySelector(`*[data-id=\"${copyComponent.id}\"]`).style.display = 'none';\n    //   return\n    // }\n\n    var groupId = '-1'\n    const isGroupId = ev.target.closest('div[data-group-id]').getAttribute('data-group-id')\n    // console.log(isGroup);\n    if(isGroupId) groupId =isGroupId\n\n    // console.log($(ev.target).hasClass('.replaceAdd'), ev.target.classList.contains(\"replaceAdd\"));\n\n    if(type){\n      // if([11, -5, -2].indexOf(Number(type)) === -1){\n      console.log({type:Number(type), index, lastIndex, id});\n\n      const arrayComponents2 = components.filter(({id}) => id !== -1) \n      const indexComponents = components.findIndex(({id:getId}) => getId === id)\n   \n      const newMoveComponent = {\n        id:-1, \n        type:-5, \n        groupId, \n        name:'move card', \n        HalfRow:0,\n        leftOrRight:-1\n      }\n\n      const getComponent = components[indexComponents];\n      console.log(getComponent);\n      const arrayComponents = update(arrayComponents2, {\n        $splice:[\n          // [index, 1]\n          [indexComponents, 0, newMoveComponent]\n        ]\n      })\n\n\n      // console.log(arrayComponents);\n      setComponents([...arrayComponents])\n      \n    }\n\n    // setLastIndex(index)\n\n    // ListBoxCard\n    ev.target.style.backgroundColor = ''\n\n    var color = '#e2ffde63'\n    // var color = 'red'\n\n    const isListBox = ev.target.classList.contains(\"ListBox\")\n    if(isListBox){\n      ev.target.style.backgroundColor = color\n    }\n\n    const isGroupDrop = ev.target.classList.contains(\"groupDrop\")\n    if(isGroupDrop){\n      ev.target.style.backgroundColor = color\n    }\n\n    const isAddComponent = ev.target.classList.contains(\"addComponent\")\n    if(isAddComponent){\n      ev.target.style.backgroundColor = color\n    }\n\n  }, [components, copyComponent])\n\n\n\n  const dragLeave = (ev) => {\n    ev.preventDefault();\n    // console.log(ev);\n\n  //  const divs = ev.target.closest('.ListBox').querySelectorAll(\".lc\")\n  //     divs.forEach((div, i) => {\n  //         div.style.transform = ''\n  //     });\n\n  const isBox = ev.target.classList.contains(\"replaceAdd\")\n  if(!isBox){\n    setComponents(components.filter(({type}) => type !== -5))\n  }\n\n  // console.log(ev.target);\n  console.log(isBox);\n  // console.log($(ev.target).hasClass('.replaceAdd'));\n\n  // const isBox = ev.target.closest('.lc') \n  // if(isBox) return\n  // // if(!isBox){\n  //   setComponents(components.filter(({type}) => type !== -5))\n  // // }\n      \n    ev.target.style.backgroundColor = ''\n\n  }\n  \n  const drag = (ev) => {\n    // console.log(ev.target);\n    ev.dataTransfer.setData(\"CARD\", Number(ev.target.getAttribute('data-id')));\n  }\n  const moveDrag = useCallback((ev) =>{\n    const id = ev.target.getAttribute('data-id')\n\n    console.log('moveDrag');\n    ev.target.style.opacity = 0.4\n\n    setCopyComponent(components.find(({id:getId}) => getId === id))\n\n\n  }, [components])\n\n\n  const moveDragEnd = (ev) =>{\n    ev.target.style.opacity = 1\n  }\n\n\n  const drop = useCallback((ev)=>{\n    ev.preventDefault();\n    ev.target.style.backgroundColor = ''\n\n    var id = Number( ev.dataTransfer.getData(\"CARD\") );\n    var groupId = ev.target.getAttribute('data-group-id')\n    var updateId = ev.target.getAttribute('data-update-id')\n\n    // var moveId = ev.dataTransfer.getData(\"MOVE_CARD\")\n    // if(moveId){\n    //   console.log(moveId);\n    //   return \n    // }\n\n    if(copyComponent?.id){\n      var { id } = copyComponent\n      console.log({copyComponent});\n      const lastIndex = components.findIndex(({id:getId}) => getId === id)\n      const nowIndex = components.findIndex(({id}) => id === -1)\n\n\n      $('.ListBoxCard').css({opacity:1})\n\n      // const divs = document.querySelectorAll('.ListBoxCard')\n      // divs.forEach((div)=>{\n      //   div.style.opacity = 1\n      // })\n\n\n      console.log({nowIndex});\n\n      if(nowIndex === -1){\n\n        const arrayComponents = components.filter(({id:getId}) => getId !== copyComponent.id);\n        setComponents([...arrayComponents, copyComponent])\n\n      }else{\n\n        const arrayComponents = update(components, {\n          $splice:[\n            [lastIndex, 1],\n            [nowIndex, 0, copyComponent]\n          ]\n        })\n\n        setComponents([...arrayComponents.filter(({id}) => id !== -1)])\n      }\n\n      setCopyComponent({})\n      return\n    }\n\n    if(groupId){\n      const newComponent = {\n        id:uuid(), \n        type:id, \n        groupId, \n        name:buliderType.find(({id:getId}) => getId === id).name, \n        HalfRow:0,\n        leftOrRight:-1\n      }\n      setUpdateDrop(newComponent)\n    }\n\n    if(updateId){\n      setUpdateId({id:updateId, type:id})\n    }\n\n    \n\n  }, [updateDrop, updateId, copyComponent, components])\n\n\n\n  // const moveDrop = (ev) =>{\n  //   var id = Number( ev.dataTransfer.getData(\"CARD\") );\n  // }\n\n  const removeComponent = ({id, nextId = 0}) =>{\n    const arrayComponents = components.filter(({groupId}) => groupId !== id)\n    const arrayComponents2 = arrayComponents.filter(({id:getId}) => getId !== id && getId !== nextId)\n\n    setComponents(([...arrayComponents2]))\n\n  }\n\n  const addRow = (id, groupId) =>{\n      const componentIndex = components.findIndex(({id:getId}) => getId === id);\n      // console.log(componentIndex);\n      const newComponent = {\n        id:uuid(), \n        type:14, \n        groupId, \n        name:'Half Row', \n        HalfRow:1,\n        leftOrRight:1\n      }\n\n      const arrayComponents = update(components, {[componentIndex]:{HalfRow:{$set:1}, leftOrRight:{$set:0}}})\n      const arrayComponents2 = update(arrayComponents, {\n        $splice:[\n          [componentIndex+1, 0, newComponent]\n        ]\n      })\n      // console.log(arrayComponents2);\n      setComponents([...arrayComponents2])\n  }\n\n  const removeRow = (id, prevId) =>{\n    const arrayComponent = components.filter(({id:getId}) => getId !== id) \n    const index = arrayComponent.findIndex(({id})=> id === prevId)\n\n    const arrayComponent2 = update(arrayComponent, {[index]:{HalfRow:{$set:0}, leftOrRight:{$set:-1}}})\n\n    // console.log(arrayComponent2);\n    setComponents([...arrayComponent2])\n  }\n\n  return (<>\n  <h2>ReactJS with Javascript - Drag and Drop</h2>\n\n<div className=\"flex\">\n    <div >\n\n      {\n        buliderType.map(({id, name}, k) => (\n          <div key={k} className=\"box\" draggable=\"true\" onDragStart={drag} id={`drag_${id}`} data-id={id} >{name}</div>\n        ))\n      }\n      {/* <div draggable=\"true\" onDragStart={drag} id=\"drag1\" width=\"88\" height=\"31\">dev</div> */}\n    </div>\n\n    <div className=\"ListBox\" onDrop={drop} onDragOver={allowDrop} onDragLeave={dragLeave} data-group-id={0} >\n      {\n        components.filter(({groupId})=> groupId === '0').map((component, k) =>(<ListBox \n                                                                                    key={k} \n                                                                                    index={k} \n                                                                                    component={component} \n                                                                                    components={components} \n                                                                                    drop={drop} \n                                                                                    allowDrop={allowDrop} \n                                                                                    removeComponent={removeComponent} \n                                                                                    addRow={addRow}\n                                                                                    removeRow={removeRow} \n                                                                                    moveDrag={moveDrag}\n                                                                                    moveDragEnd={moveDragEnd}\n                                                                                    />) )\n      }\n    </div>\n  </div>\n  </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}